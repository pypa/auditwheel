[build-system]
requires = ["setuptools>=61", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "auditwheel"
dynamic = ["version"]
description = "Cross-distribution Linux wheels"
readme = "README.rst"
license = {text = "MIT" }
requires-python = ">=3.9"
authors = [
    { name = "Robert T. McGibbon", email = "rmcgibbo@gmail.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "packaging>=20.9",
    "pyelftools>=0.24",
]

[project.scripts]
auditwheel = "auditwheel.main:main"

[project.urls]
Homepage = "https://github.com/pypa/auditwheel"

[dependency-groups]
test = ["pytest>=3.4", "jsonschema", "patchelf", "pretend", "docker"]
coverage = ["pytest-cov", {include-group = "test"}]
dev = [{include-group = "test"}, {include-group = "coverage"}]

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.setuptools.package-data]
auditwheel = ["*.json"]

[tool.setuptools_scm]
# enable version inference

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_defs = false
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
extra_checks = true
strict = false
strict_equality = true
warn_redundant_casts = true
warn_unreachable = false
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "auditwheel.*"
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
warn_return_any = true

[[tool.mypy.overrides]]
module = "auditwheel._vendor.*"
follow_imports = "skip"
ignore_errors = true

[tool.pytest.ini_options]
log_cli = true
log_cli_level = 20

[tool.ruff]
target-version = "py39"
exclude = ["src/auditwheel/_vendor"]

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "TID251",      # flake8-tidy-imports.banned-api
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "PYI",         # flake8-pyi
]
ignore = [
  "ISC001", # Conflicts with formatter
  "PLR",    # Design related pylint codes
]
